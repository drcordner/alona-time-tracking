[build]
  publish = "."
  command = "echo 'No build process needed - static files'"

# =============================================================================
# TEMPORARY CACHE PREVENTION - REMOVE WHEN CODE IS STABLE
# =============================================================================
# These headers prevent caching to ensure users get updates immediately
# Delete this entire section when your PWA is stable and you want normal caching

[[headers]]
  for = "/"
  [headers.values]
    # TEMP: Prevent index caching
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

[[headers]]
  for = "/index.html"
  [headers.values]
    # TEMP: Prevent HTML caching
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

[[headers]]
  for = "/**/*.html"
  [headers.values]
    # TEMP: Prevent all HTML file caching
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# =============================================================================
# END TEMPORARY CACHE PREVENTION SECTION
# =============================================================================

# PWA Core Files - Always keep these cache settings
[[headers]]
  for = "/sw.js"
  [headers.values]
    # Critical: Service Worker must always check for updates
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"
    Service-Worker-Allowed = "/"

[[headers]]
  for = "/manifest.json"
  [headers.values]
    # PWA: Manifest should check for updates frequently
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"
    Content-Type = "application/manifest+json"

# =============================================================================
# TEMPORARY ASSET CACHE PREVENTION - REMOVE WHEN CODE IS STABLE  
# =============================================================================
# Normally you'd want to cache CSS/JS/images, but preventing during development

[[headers]]
  for = "*.css"
  [headers.values]
    # TEMP: Prevent CSS caching (normally you'd cache these)
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"
    # FUTURE: When stable, use this instead:
    # Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    # TEMP: Prevent JS caching (normally you'd cache these)
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"
    # FUTURE: When stable, use this instead:
    # Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/images/*"
  [headers.values]
    # TEMP: Prevent image caching during development
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"
    # FUTURE: When stable, use this instead:
    # Cache-Control = "public, max-age=31536000, immutable"

# =============================================================================
# END TEMPORARY ASSET CACHE PREVENTION SECTION
# =============================================================================

# Security Headers - Enhanced for PWA
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    # Enhanced permissions policy for PWA
    Permissions-Policy = "camera=(), microphone=(), geolocation=(), payment=(), usb=(), bluetooth=(), magnetometer=(), gyroscope=(), accelerometer=()"
    # PWA Security
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; manifest-src 'self'"
    # HTTPS enforcement
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"

# PWA-specific headers for better app-like behavior
[[headers]]
  for = "/"
  [headers.values]
    # PWA: Help browsers treat as app
    X-UA-Compatible = "IE=edge"
    # PWA: Mobile optimization
    viewport = "width=device-width, initial-scale=1, viewport-fit=cover"

# File type specific headers for PWA assets
[[headers]]
  for = "*.webp"
  [headers.values]
    # TEMP: Prevent WebP caching during development
    Cache-Control = "no-cache, no-store, must-revalidate"
    # FUTURE: Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff2"
  [headers.values]
    # TEMP: Prevent font caching during development
    Cache-Control = "no-cache, no-store, must-revalidate"
    # FUTURE: Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "font/woff2"

[[headers]]
  for = "*.ico"
  [headers.values]
    # TEMP: Prevent favicon caching during development
    Cache-Control = "no-cache, no-store, must-revalidate"
    # FUTURE: Cache-Control = "public, max-age=2592000"
    Content-Type = "image/x-icon"

# Redirects - PWA friendly
[[redirects]]
  from = "/app"
  to = "/"
  status = 301

# PWA: Catch-all for client-side routing (SPA behavior)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# HTTPS enforcement redirect
[[redirects]]
  from = "http://your-site.netlify.app/*"
  to = "https://your-site.netlify.app/:splat"
  status = 301
  force = true

# Build environment
[build.environment]
  NODE_VERSION = "18"

# Security settings
[context.production]
  [context.production.environment]
    NODE_ENV = "production"

# Development context (optional)
[context.deploy-preview]
  [context.deploy-preview.environment]
    NODE_ENV = "development" 