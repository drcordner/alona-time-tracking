---
description:
globs:
alwaysApply: false
---
# ðŸ“š Documentation Maintenance Guidelines

## ðŸ”„ **Cross-File Dependencies**

When updating any documentation file, check these relationships:

### **docs/project-management/BACKLOG.md Updates â†’ Also Update:**
- `docs/development/LESSONS_LEARNED.md` - Add patterns learned during phase completion
- `docs/project-management/RELEASE_NOTES.md` - Document completed features and fixes
- `docs/development/CONSISTENCY_ANALYSIS.md` - Update design consistency scores

### **Code Changes â†’ Documentation Impact:**
- **New Features** â†’ Update BACKLOG.md status, add to RELEASE_NOTES.md
- **Bug Fixes** â†’ Document in LESSONS_LEARNED.md and RELEASE_NOTES.md
- **UI Changes** â†’ Update CONSISTENCY_ANALYSIS.md with design token usage
- **Deployment** â†’ Update docs/deployment/DEPLOYMENT.md with current status

## ðŸ“‹ **Documentation Standards**

### **Format Consistency:**
- Use emoji headers (ðŸŽ¯, ðŸ“‹, âœ…, ðŸ”§, etc.)
- Maintain numbered and bulleted list structures
- Include version numbers and dates where relevant
- Cross-reference related sections with clear links

### **Content Requirements:**
- **BACKLOG.md**: Phase status, completion dates, next priorities
- **LESSONS_LEARNED.md**: Technical patterns, mistakes avoided, best practices
- **CONSISTENCY_ANALYSIS.md**: Design token usage, UI patterns, consistency scores
- **DEPLOYMENT.md**: Current deployment status, process documentation
- **RELEASE_NOTES.md**: Chronological changelog with technical details

## ðŸš¨ **Mandatory Updates**

Always update when:
- âœ… Completing a development phase
- âœ… Fixing significant bugs
- âœ… Adding new features
- âœ… Changing deployment processes
- âœ… Improving design consistency

@docs/project-management/BACKLOG.md
@docs/project-management/RELEASE_NOTES.md
@docs/deployment/DEPLOYMENT.md
