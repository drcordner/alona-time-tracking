---
description:
globs:
alwaysApply: false
---
# 🧪 Experiment Mode - Vibe Coding

## 🎯 **Rapid Iteration Support**

When you're in **experiment mode**, here's how to stay productive without losing quality:

### **🚀 Quick Experiment Workflow:**
```
1. 🎯 Small focused change
2. 🧪 Test immediately in browser
3. 📱 Quick mobile check
4. ✅ Push to staging if promising
5. 🔄 Iterate or revert quickly
```

### **📦 Experiment Patterns:**

#### **CSS Experiments:**
```css
/* Experiment: [description] */
.experiment-class {
  /* Try new approach here */
}
```

#### **JS Feature Experiments:**
```javascript
// Experiment: [description] 
// TODO: Clean up if keeping, or remove if not
const experimentalFeature = () => {
  // New functionality here
};
```

#### **UI Layout Experiments:**
```html
<!-- Experiment: [description] -->
<div class="experimental-layout">
  <!-- New layout approach -->
</div>
```

## ⚡ **Experiment-to-Production Pipeline**

### **🧪 Experimental Phase:**
- Code with comments marking experiments
- Quick staging tests
- Document what you're trying to achieve
- Don't worry about perfect code quality yet

### **🔄 Refinement Phase:**
- Clean up successful experiments
- Remove failed experiment code
- Apply design tokens properly
- Update documentation if keeping

### **✅ Integration Phase:**
- Remove experiment comments
- Follow established patterns
- Run integration checks
- Update relevant .md files

## 🎭 **Experiment-Friendly Mindset:**

### **✅ Embrace:**
- **Rapid iteration** - Try things quickly
- **Staging as playground** - Use it fearlessly
- **Intuitive development** - Follow what feels right
- **Progressive enhancement** - Add, don't break
- **Mobile-first experiments** - Think thumb-friendly

### **⚠️ Gentle Guardrails:**
- **Keep data safe** - Don't break storage/export
- **Maintain core flows** - Timer, goals, reports
- **Mobile compatibility** - Don't break phone experience
- **Staging first** - Test before production
- **Document big wins** - Add patterns to lessons learned

## 🔧 **Experiment Categories:**

### **🎨 Visual Experiments:**
- New color schemes or design tokens
- Layout improvements
- Animation enhancements
- Typography adjustments

### **🔄 UX Experiments:**
- New user flows
- Interaction improvements
- Navigation enhancements
- Accessibility features

### **⚡ Performance Experiments:**
- Code optimizations
- Loading improvements
- Memory usage enhancements
- Bundle size reductions

### **🎯 Feature Experiments:**
- New functionality prototypes
- Enhanced reporting features
- Goal system improvements
- Data visualization experiments

## 🌟 **Success Metrics for Experiments:**

```
🎯 Does it solve a real problem?
😊 Does it improve the user experience?
📱 Does it work well on mobile?
⚡ Does it maintain good performance?
🔗 Does it integrate well with existing features?
```

*Experiment boldly, fail fast, learn quickly, and iterate with joy.*
